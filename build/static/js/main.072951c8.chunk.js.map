{"version":3,"sources":["Home/home.module.css","components/TabNav/TabNav.module.css","Nav/nav.module.css","Documentation/Documentation.module.css","Nav/Nav.js","Github/Github.js","components/TabNav/TabNav.js","components/Tab/Tab.js","Documentation/Documentation.js","About/About.js","Home/Home.js","NotFoundPage/NotFoundPage.js","components/Footer/Footer.js","App.js","serviceWorker.js","API/API.js","index.js"],"names":["module","exports","Nav","className","styles","navContent","navLink","to","target","rel","href","Github","TabNav","props","container","navTabs","tabs","map","tab","active","selected","navItem","key","onClick","setSelected","children","Tab","isSelected","Documentation","useState","selectedParagraphExample","setSelectedParagraphExample","selectedWordExample","setSelectedWordExample","documentation","APIrequestExample","heading","info","apiDescription","prettyPrint","About","Home","numberToGenerate","setNumberToGenerate","loremType","setLoremType","removeProfanity","setRemoveProfanity","output","setOutput","inputAreaRef","useRef","generateOutput","data","generateParagraphOutput","generateWordOutput","i","length","handleLoremToggle","e","value","generateText","a","preventDefault","fetch","response","json","page","home","hero","src","alt","leftClouds","rightClouds","heroContent","mountains","heroText","style","display","visitorCount","infoText","onSubmit","type","name","onChange","id","checked","data-tab-target","for","button","data-tab-content","paragraphControls","test","numberInput","profanityContainer","profanityToggle","placeholder","generateTextButton","outputIpsum","current","select","document","execCommand","ref","defaultValue","NotFoundPage","Footer","App","exact","path","Boolean","window","location","hostname","match","API","result","setResult","useParams","number","useEffect","makeRequest","console","log","makeDefaultRequest","word","paragraph","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.072951c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"home_page__KlNfK\",\"home\":\"home_home__7JP_9\",\"leftClouds\":\"home_leftClouds__3K1gC\",\"rightClouds\":\"home_rightClouds__3cfJi\",\"container\":\"home_container__2lV9x\",\"tabs\":\"home_tabs__zcJ3r\",\"hero\":\"home_hero__Y4c_h\",\"heroContent\":\"home_heroContent__YNQyY\",\"mountains\":\"home_mountains__1BwsC\",\"heroText\":\"home_heroText__2oxI0\",\"visitorCount\":\"home_visitorCount__1ovQD\",\"infoText\":\"home_infoText__11Jo0\",\"active\":\"home_active__3-rMF\",\"numberInput\":\"home_numberInput__mWFEE\",\"profanityContainer\":\"home_profanityContainer__Ltvr6\",\"profanityToggle\":\"home_profanityToggle__vBe6r\",\"button\":\"home_button__11AC6\",\"generateTextButton\":\"home_generateTextButton__2sJAJ\",\"outputIpsum\":\"home_outputIpsum__1CJug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TabNav_container__1lleq\",\"navTabs\":\"TabNav_navTabs__2GF_E\",\"navItem\":\"TabNav_navItem__3m5gG\",\"active\":\"TabNav_active__3Y4Jn\",\"navLink\":\"TabNav_navLink__3F016\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContent\":\"nav_navContent__2mUff\",\"navLink\":\"nav_navLink__29L5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"documentation\":\"Documentation_documentation__3uSxh\",\"APIrequestExample\":\"Documentation_APIrequestExample__1KR8a\",\"apiDescription\":\"Documentation_apiDescription__g9HnS\",\"prettyPrint\":\"Documentation_prettyPrint__21ULe\",\"heading\":\"Documentation_heading__poRTd\",\"info\":\"Documentation_info__1_dHX\"};","import React from 'react';\nimport styles from './nav.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul className={styles.navContent}>\n        <Link className={styles.navLink} to=\"/\">Home</Link>\n        <Link className={styles.navLink} to=\"/documentation\">Documentation</Link>\n        <a className={styles.navLink} target=\"_blank\" rel=\"noopener noreferrer\" href= \"https://github.com/strangeforloop/Twin-Peaks-Lorem-Ipsum\">Github</a>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nconst Github = () => {\n  return (\n    <div>Should redirect</div>\n  );\n}\n\nexport default Github;","import React from \"react\";\nimport styles from './TabNav.module.css';\n\nexport default function TabNav(props) {\n  return (\n    <div className={styles.container}>\n      <ul className={styles.navTabs}>\n        {props.tabs.map((tab) => {\n          const active = tab === props.selected ? styles.active : \"\";\n\n          return (\n            <li className={ `${styles.navItem} ${active}`} key={tab}>\n              <a\n                href=\"#\"\n                className={` ${styles.navLink} ${active}` }\n                onClick={() => props.setSelected(tab)}\n              >\n                { tab }\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Tab(props) {\n    if (props.isSelected) {\n      return <div>{props.children}</div>\n    }\n\n    return null;\n\n}\n","import React, { useState } from 'react';\nimport styles from './Documentation.module.css';\nimport TabNav from \"../components/TabNav/TabNav\";\nimport Tab from \"../components/Tab/Tab\";\n\nconst Documentation = () => {\n  const [selectedParagraphExample, setSelectedParagraphExample] = useState(\"Default\");\n  const [selectedWordExample , setSelectedWordExample] = useState(\"Default\");\n\n  return (\n    <div className={styles.documentation}>\n      <h3>How to Use the API</h3>\n      <div className={styles.APIrequestExample}>\n        <p className={styles.heading}>API - Get Lorem Ipsum By Paragraphs</p>\n        <TabNav\n          tabs={[\"Default\", \"Specific Paragraph Count\", \"Profanity Toggle\"]}\n          selected={selectedParagraphExample}\n          setSelected={setSelectedParagraphExample}\n        >\n          <Tab isSelected={selectedParagraphExample === \"Default\"}>\n            <div className={styles.info}>\n              <h5>Lorem Ipsum Paragraphs</h5>\n              <p className={styles.apiDescription}>Get paragraphs of lorem ipsum.</p>\n              <p className={styles.prettyPrint}>GET https://twinpeaksloremipsum.com/api/paragraphs</p>\n            </div>\n          </Tab>\n          <Tab isSelected={selectedParagraphExample === \"Specific Paragraph Count\"}>\n            <div className={styles.info}>\n              <h5>Paragraph Count</h5>\n              <p className={styles.apiDescription}>Get a Specific Number of Lorem Ipsum Paragraphs</p>\n              <p className={styles.prettyPrint}>GET https://twinpeaksloremipsum.com/api/paragraphs/:numberOfParagraphs</p>\n            </div>\n          </Tab>\n          <Tab isSelected={selectedParagraphExample === \"Profanity Toggle\"}>\n            <div className={styles.info}>\n              <h5>Profanity Toggle for Lorem Ipsum Paragraphs</h5>\n              <p className={styles.apiDescription}>Toggle the profanity on or off.</p>\n              <p className={styles.prettyPrint}>GET https://twinpeaksloremipsum.com/api/paragraphs/:numberOfParagraphs/?profanity=true</p>\n            </div>\n          </Tab>\n        </TabNav>\n      </div>\n\n      <div className={styles.APIrequestExample}>\n      <p className={styles.heading}>API - Get Lorem Ipsum By Words</p>\n      <TabNav\n        tabs={[\"Default\", \"Specific Word Count\"]}\n        selected={selectedWordExample}\n        setSelected={setSelectedWordExample}\n      >\n        <Tab isSelected={selectedWordExample === \"Default\"}>\n          <div className={styles.info}>\n            <h5>Lorem Ipsum Paragraphs</h5>\n            <p className={styles.apiDescription}>Get paragraphs of lorem ipsum.</p>\n            <p className={styles.prettyPrint}>GET https://twinpeaksloremipsum.com/api/words</p>\n          </div>\n        </Tab>\n        <Tab isSelected={selectedWordExample === \"Specific Word Count\"}>\n          <div>\n            <h5>Paragraph Count</h5>\n            <p className={styles.apiDescription}>Get a Specific Number of Lorem Ipsum Paragraphs</p>\n            <p className={styles.prettyPrint}>GET https://twinpeaksloremipsum.com/api/words/:numberOfWords</p>\n          </div>\n        </Tab>\n      </TabNav>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Documentation;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>About the thingy</div>\n  );\n}\n\nexport default About;\n","import React, { useRef, useState } from 'react';\nimport styles from './home.module.css';\n\nconst Home = () => {\n  const [numberToGenerate, setNumberToGenerate] = useState(3);\n  const [loremType, setLoremType] = useState('paragraphs');\n  const [removeProfanity, setRemoveProfanity] = useState(false);\n  const [output, setOutput] = useState('');\n  const inputAreaRef = useRef(null);\n\n  const generateOutput = (data) => {\n    if (loremType === 'paragraphs') {\n      generateParagraphOutput(data);\n    } else {\n      generateWordOutput(data);\n    }\n  }\n\n  const generateParagraphOutput = (data) => {\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n      output += data[i] + '\\n\\n';\n    }\n\n    setOutput(output);\n  }\n\n  const generateWordOutput = (data) => {\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n      output += data[i] + ' ';\n    }\n\n    setOutput(output);\n  }\n\n  const handleLoremToggle = (e) => {\n    setLoremType(e.target.value);\n  }\n\n  const handleProfanityToggle = (e) => {\n    setRemoveProfanity(e.target.checked);\n  }\n\n  const handleNumberInput = (e) => {\n    setNumberToGenerate(e.target.value);\n  }\n\n  const copyTextToClipboard = (e) => {\n    inputAreaRef.current.select();\n    document.execCommand('copy');\n  }\n\n  const generateText =  async (e) => {\n    e.preventDefault();\n    const response = await fetch(`https://twin-peaks-lorem-ipsum.herokuapp.com/api/${loremType}/${numberToGenerate}/?profanity=${removeProfanity}`);\n    const data = await response.json();\n    // console.log(data);\n    generateOutput(data);\n  }\n\n  return (\n    <div className={styles.page}>\n      <div className={styles.home}>\n        <div className={styles.hero}>\n          <img src=\"/assets/SVG/clouds_left.svg\" alt=\"clouds\" className={styles.leftClouds}></img>\n          <img src=\"/assets/SVG/clouds_right.svg\" alt=\"clouds\" className={styles.rightClouds}></img>\n          <div className={styles.heroContent}>\n            <img src=\"/assets/SVG/mountains.svg\" alt=\"twin peaks mountains\" className={styles.mountains}></img>\n            <div className={styles.heroText}>\n              <h1>Twin Peaks\n              <span style={{ display: 'block' }}>Ipsum</span>\n              </h1>\n              <p className={styles.visitorCount}>Population: 51,201</p>\n              <p className={styles.infoText}>The text is not what it seems. Choose either paragraphs containing dialog from Twin Peaks or words associated with Twin Peaks.\n            </p>\n            </div>\n          </div>\n        </div>\n        <form onSubmit={generateText}>\n          <div className={styles.tabs}>\n            <input\n              type=\"radio\"\n              name=\"lorem-type\"\n              onChange={handleLoremToggle}\n              id=\"paragraphs\"\n              value=\"paragraphs\"\n              checked={loremType === 'paragraphs'}\n            />\n            <label data-tab-target=\"#paragraphs-controls\" for=\"paragraphs\" className={styles.button}>Paragraphs</label>\n            <input\n              type=\"radio\"\n              name=\"lorem-type\"\n              onChange={handleLoremToggle}\n              id=\"words\"\n              value=\"words\"\n              checked={loremType === 'words'}\n            />\n            <label data-tab-target=\"#words-controls\" for=\"words\" className={styles.button}>Words</label>\n          </div>\n\n          <div className=\"tabs-content\">\n            <div id=\"paragraphs-controls\" data-tab-content className={`${styles.paragraphControls} ${styles.active}`}>\n              <div className={styles.test}>\n                <input\n                  type=\"number\"\n                  id=\"number-ipsum\"\n                  className={styles.numberInput}\n                  onChange={handleNumberInput}\n                  value={numberToGenerate}\n                />\n\n                {loremType === 'paragraphs' ?\n                  <div className={styles.profanityContainer}>\n                    <input\n                      type=\"checkbox\"\n                      id=\"remove-profanity\"\n                      className={styles.profanityToggle}\n                      name=\"profanity-toggle\"\n                      onChange={handleProfanityToggle}\n                    />\n                    <label for=\"profanity-toggle\">Remove Profanity</label>\n                  </div>\n                  :\n                  <div className={styles.profanityContainer}>\n                  </div>\n                }\n              </div>\n\n            </div>\n\n            <div id=\"words-controls\" data-tab-content className=\"words-controls\">\n              <input\n                type=\"number\"\n                id=\"number-ipsum\"\n                className={styles.numberInput }\n                placeholder=\"paragraphs\"\n                value={numberToGenerate}\n              />\n            </div>\n            <input\n              type=\"submit\"\n              className={`${styles.generateTextButton} ${styles.button}`} id=\"generateIpsum\"\n              value=\"Generate Text\"\n            />\n          </div>\n        </form>\n      </div>\n\n      <section className={`${styles.outputIpsum} ${styles.container}`} id=\"output-ipsum\">\n        <button onClick={copyTextToClipboard}>\n          Copy\n        </button>\n        <textarea ref={inputAreaRef}\n          placeholder=\"Select Paragraphs or Words and how many to generate. Then click the Generate Text button.\"\n          defaultValue={output}>\n        </textarea>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst NotFoundPage = () => {\n  return (\n    <div style={\n      { 'display': 'flex',\n      'flexDirection': 'column',\n      'alignItems': 'center',\n      'margin-top': '10%'\n      }}>\n      <h1>404</h1>\n      <div>This page is not as it seems...</div>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <p>Every day, once a day, give yourself a present.</p>\n      <p>Developed with ♥ by Anna.</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport Nav from './Nav/Nav';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Github from './Github/Github';\nimport Documentation from './Documentation/Documentation';\nimport About from './About/About';\nimport Home from './Home/Home';\nimport NotFoundPage from './NotFoundPage/NotFoundPage';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <main>\n          <Switch className=\"appContent\">\n            <Route exact path=\"/documentation\">\n              <Documentation />\n            </Route>\n            <Route path=\"/github\">\n              <Github />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path='*'>\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst API = () => {\n  const [result, setResult] = useState('');\n  const {loremType, number} = useParams();\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      const response = await fetch(`https://twin-peaks-lorem-ipsum.herokuapp.com/${loremType}/${number}`);\n      console.log({response});\n      const data = await response.json();\n      setResult(data);\n    };\n\n    const makeDefaultRequest = async () => {\n      const response = await fetch(`https://twin-peaks-lorem-ipsum.herokuapp.com/${loremType}`);\n      console.log({response});\n      const data = await response.json();\n      setResult(data);\n    };\n\n    if (!number) {\n      console.log('calling makeDefaultRequest');\n      makeDefaultRequest();\n    } else {\n      console.log('calling makeRequest');\n      makeRequest();\n    }\n  }, [loremType, number]);\n\n  return (\n    <div>\n      { result\n        ?\n        <div>\n          { loremType === 'words'\n            ?\n            result.map(word => {\n              return word + ' ';\n            })\n            :\n            result.map(paragraph => {\n              return <p>{ paragraph }</p>;\n            })\n          }\n        </div>\n        :\n        <div></div>\n      }\n    </div>\n  );\n}\n\nexport default API;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport API from './API/API';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path={`/api/:loremType/`}>\n          <API />\n        </Route>\n        <Route path={`/api/:loremType/:number`}>\n          <API />\n        </Route>\n        <Route>\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}